
Terraform used the selected providers to generate the following execution
plan. Resource actions are indicated with the following symbols:
  [32m+[0m create[0m

Terraform will perform the following actions:

[1m  # azurerm_availability_set.as[0m will be created
[0m  [32m+[0m[0m resource "azurerm_availability_set" "as" {
      [32m+[0m[0m id                           = (known after apply)
      [32m+[0m[0m location                     = "eastus"
      [32m+[0m[0m managed                      = true
      [32m+[0m[0m name                         = "udacity-project-as"
      [32m+[0m[0m platform_fault_domain_count  = 3
      [32m+[0m[0m platform_update_domain_count = 5
      [32m+[0m[0m resource_group_name          = "udacity-project-rg"
    }

[1m  # azurerm_lb.lb[0m will be created
[0m  [32m+[0m[0m resource "azurerm_lb" "lb" {
      [32m+[0m[0m id                   = (known after apply)
      [32m+[0m[0m location             = "eastus"
      [32m+[0m[0m name                 = "udacity-project-lb"
      [32m+[0m[0m private_ip_address   = (known after apply)
      [32m+[0m[0m private_ip_addresses = (known after apply)
      [32m+[0m[0m resource_group_name  = "udacity-project-rg"
      [32m+[0m[0m sku                  = "Standard"
      [32m+[0m[0m sku_tier             = "Regional"

      [32m+[0m[0m frontend_ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m id                                                 = (known after apply)
          [32m+[0m[0m inbound_nat_rules                                  = (known after apply)
          [32m+[0m[0m load_balancer_rules                                = (known after apply)
          [32m+[0m[0m name                                               = "udacity-project-lb-pubip"
          [32m+[0m[0m outbound_rules                                     = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = (known after apply)
          [32m+[0m[0m private_ip_address_version                         = (known after apply)
          [32m+[0m[0m public_ip_address_id                               = (known after apply)
          [32m+[0m[0m public_ip_prefix_id                                = (known after apply)
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_lb_backend_address_pool.be_pool[0m will be created
[0m  [32m+[0m[0m resource "azurerm_lb_backend_address_pool" "be_pool" {
      [32m+[0m[0m backend_ip_configurations = (known after apply)
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m inbound_nat_rules         = (known after apply)
      [32m+[0m[0m load_balancing_rules      = (known after apply)
      [32m+[0m[0m loadbalancer_id           = (known after apply)
      [32m+[0m[0m name                      = "be_pool"
      [32m+[0m[0m outbound_rules            = (known after apply)
    }

[1m  # azurerm_linux_virtual_machine.vm[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "vm" {
      [32m+[0m[0m admin_password                                         = (sensitive value)
      [32m+[0m[0m admin_username                                         = "azureuser"
      [32m+[0m[0m allow_extension_operations                             = true
      [32m+[0m[0m availability_set_id                                    = (known after apply)
      [32m+[0m[0m bypass_platform_safety_checks_on_user_schedule_enabled = false
      [32m+[0m[0m computer_name                                          = (known after apply)
      [32m+[0m[0m disable_password_authentication                        = false
      [32m+[0m[0m disk_controller_type                                   = (known after apply)
      [32m+[0m[0m extensions_time_budget                                 = "PT1H30M"
      [32m+[0m[0m id                                                     = (known after apply)
      [32m+[0m[0m location                                               = "eastus"
      [32m+[0m[0m max_bid_price                                          = -1
      [32m+[0m[0m name                                                   = "udacity-project-vm-0"
      [32m+[0m[0m network_interface_ids                                  = (known after apply)
      [32m+[0m[0m patch_assessment_mode                                  = "ImageDefault"
      [32m+[0m[0m patch_mode                                             = "ImageDefault"
      [32m+[0m[0m platform_fault_domain                                  = -1
      [32m+[0m[0m priority                                               = "Regular"
      [32m+[0m[0m private_ip_address                                     = (known after apply)
      [32m+[0m[0m private_ip_addresses                                   = (known after apply)
      [32m+[0m[0m provision_vm_agent                                     = true
      [32m+[0m[0m public_ip_address                                      = (known after apply)
      [32m+[0m[0m public_ip_addresses                                    = (known after apply)
      [32m+[0m[0m resource_group_name                                    = "udacity-project-rg"
      [32m+[0m[0m size                                                   = "Standard_B1s"
      [32m+[0m[0m source_image_id                                        = "/subscriptions/b6a27b6d-3141-46ad-871e-7a588457c248/resourceGroups/AZUREDEVOPS/providers/Microsoft.Compute/images/myUdacityPackerImage"
      [32m+[0m[0m tags                                                   = {
          [32m+[0m[0m "Environment" = "Test"
          [32m+[0m[0m "Project"     = "udacity_project_1"
        }
      [32m+[0m[0m virtual_machine_id                                     = (known after apply)
      [32m+[0m[0m vm_agent_platform_updates_enabled                      = false

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m id                        = (known after apply)
          [32m+[0m[0m name                      = (known after apply)
          [32m+[0m[0m storage_account_type      = "Standard_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m termination_notification (known after apply)
    }

[1m  # azurerm_linux_virtual_machine.vm[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_linux_virtual_machine" "vm" {
      [32m+[0m[0m admin_password                                         = (sensitive value)
      [32m+[0m[0m admin_username                                         = "azureuser"
      [32m+[0m[0m allow_extension_operations                             = true
      [32m+[0m[0m availability_set_id                                    = (known after apply)
      [32m+[0m[0m bypass_platform_safety_checks_on_user_schedule_enabled = false
      [32m+[0m[0m computer_name                                          = (known after apply)
      [32m+[0m[0m disable_password_authentication                        = false
      [32m+[0m[0m disk_controller_type                                   = (known after apply)
      [32m+[0m[0m extensions_time_budget                                 = "PT1H30M"
      [32m+[0m[0m id                                                     = (known after apply)
      [32m+[0m[0m location                                               = "eastus"
      [32m+[0m[0m max_bid_price                                          = -1
      [32m+[0m[0m name                                                   = "udacity-project-vm-1"
      [32m+[0m[0m network_interface_ids                                  = (known after apply)
      [32m+[0m[0m patch_assessment_mode                                  = "ImageDefault"
      [32m+[0m[0m patch_mode                                             = "ImageDefault"
      [32m+[0m[0m platform_fault_domain                                  = -1
      [32m+[0m[0m priority                                               = "Regular"
      [32m+[0m[0m private_ip_address                                     = (known after apply)
      [32m+[0m[0m private_ip_addresses                                   = (known after apply)
      [32m+[0m[0m provision_vm_agent                                     = true
      [32m+[0m[0m public_ip_address                                      = (known after apply)
      [32m+[0m[0m public_ip_addresses                                    = (known after apply)
      [32m+[0m[0m resource_group_name                                    = "udacity-project-rg"
      [32m+[0m[0m size                                                   = "Standard_B1s"
      [32m+[0m[0m source_image_id                                        = "/subscriptions/b6a27b6d-3141-46ad-871e-7a588457c248/resourceGroups/AZUREDEVOPS/providers/Microsoft.Compute/images/myUdacityPackerImage"
      [32m+[0m[0m tags                                                   = {
          [32m+[0m[0m "Environment" = "Test"
          [32m+[0m[0m "Project"     = "udacity_project_1"
        }
      [32m+[0m[0m virtual_machine_id                                     = (known after apply)
      [32m+[0m[0m vm_agent_platform_updates_enabled                      = false

      [32m+[0m[0m os_disk {
          [32m+[0m[0m caching                   = "ReadWrite"
          [32m+[0m[0m disk_size_gb              = (known after apply)
          [32m+[0m[0m id                        = (known after apply)
          [32m+[0m[0m name                      = (known after apply)
          [32m+[0m[0m storage_account_type      = "Standard_LRS"
          [32m+[0m[0m write_accelerator_enabled = false
        }

      [32m+[0m[0m termination_notification (known after apply)
    }

[1m  # azurerm_managed_disk.mandisk[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_managed_disk" "mandisk" {
      [32m+[0m[0m create_option                     = "Empty"
      [32m+[0m[0m disk_iops_read_only               = (known after apply)
      [32m+[0m[0m disk_iops_read_write              = (known after apply)
      [32m+[0m[0m disk_mbps_read_only               = (known after apply)
      [32m+[0m[0m disk_mbps_read_write              = (known after apply)
      [32m+[0m[0m disk_size_gb                      = 1
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m location                          = "eastus"
      [32m+[0m[0m logical_sector_size               = (known after apply)
      [32m+[0m[0m max_shares                        = (known after apply)
      [32m+[0m[0m name                              = "udacity-project-data-disk-0"
      [32m+[0m[0m optimized_frequent_attach_enabled = false
      [32m+[0m[0m performance_plus_enabled          = false
      [32m+[0m[0m public_network_access_enabled     = true
      [32m+[0m[0m resource_group_name               = "udacity-project-rg"
      [32m+[0m[0m source_uri                        = (known after apply)
      [32m+[0m[0m storage_account_type              = "Standard_LRS"
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "Test"
        }
      [32m+[0m[0m tier                              = (known after apply)
    }

[1m  # azurerm_managed_disk.mandisk[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_managed_disk" "mandisk" {
      [32m+[0m[0m create_option                     = "Empty"
      [32m+[0m[0m disk_iops_read_only               = (known after apply)
      [32m+[0m[0m disk_iops_read_write              = (known after apply)
      [32m+[0m[0m disk_mbps_read_only               = (known after apply)
      [32m+[0m[0m disk_mbps_read_write              = (known after apply)
      [32m+[0m[0m disk_size_gb                      = 1
      [32m+[0m[0m id                                = (known after apply)
      [32m+[0m[0m location                          = "eastus"
      [32m+[0m[0m logical_sector_size               = (known after apply)
      [32m+[0m[0m max_shares                        = (known after apply)
      [32m+[0m[0m name                              = "udacity-project-data-disk-1"
      [32m+[0m[0m optimized_frequent_attach_enabled = false
      [32m+[0m[0m performance_plus_enabled          = false
      [32m+[0m[0m public_network_access_enabled     = true
      [32m+[0m[0m resource_group_name               = "udacity-project-rg"
      [32m+[0m[0m source_uri                        = (known after apply)
      [32m+[0m[0m storage_account_type              = "Standard_LRS"
      [32m+[0m[0m tags                              = {
          [32m+[0m[0m "Environment" = "Test"
        }
      [32m+[0m[0m tier                              = (known after apply)
    }

[1m  # azurerm_network_interface.nic[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "nic" {
      [32m+[0m[0m accelerated_networking_enabled = false
      [32m+[0m[0m applied_dns_servers            = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix    = (known after apply)
      [32m+[0m[0m ip_forwarding_enabled          = false
      [32m+[0m[0m location                       = "eastus"
      [32m+[0m[0m mac_address                    = (known after apply)
      [32m+[0m[0m name                           = "udacity-project-nic-0"
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m private_ip_addresses           = (known after apply)
      [32m+[0m[0m resource_group_name            = "udacity-project-rg"
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "Test"
        }
      [32m+[0m[0m virtual_machine_id             = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "ipconfig"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_network_interface.nic[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface" "nic" {
      [32m+[0m[0m accelerated_networking_enabled = false
      [32m+[0m[0m applied_dns_servers            = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m internal_domain_name_suffix    = (known after apply)
      [32m+[0m[0m ip_forwarding_enabled          = false
      [32m+[0m[0m location                       = "eastus"
      [32m+[0m[0m mac_address                    = (known after apply)
      [32m+[0m[0m name                           = "udacity-project-nic-1"
      [32m+[0m[0m private_ip_address             = (known after apply)
      [32m+[0m[0m private_ip_addresses           = (known after apply)
      [32m+[0m[0m resource_group_name            = "udacity-project-rg"
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "Test"
        }
      [32m+[0m[0m virtual_machine_id             = (known after apply)

      [32m+[0m[0m ip_configuration {
          [32m+[0m[0m gateway_load_balancer_frontend_ip_configuration_id = (known after apply)
          [32m+[0m[0m name                                               = "ipconfig"
          [32m+[0m[0m primary                                            = (known after apply)
          [32m+[0m[0m private_ip_address                                 = (known after apply)
          [32m+[0m[0m private_ip_address_allocation                      = "Dynamic"
          [32m+[0m[0m private_ip_address_version                         = "IPv4"
          [32m+[0m[0m subnet_id                                          = (known after apply)
        }
    }

[1m  # azurerm_network_interface_backend_address_pool_association.be_pool_assoc[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface_backend_address_pool_association" "be_pool_assoc" {
      [32m+[0m[0m backend_address_pool_id = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ip_configuration_name   = "ipconfig"
      [32m+[0m[0m network_interface_id    = (known after apply)
    }

[1m  # azurerm_network_interface_backend_address_pool_association.be_pool_assoc[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_interface_backend_address_pool_association" "be_pool_assoc" {
      [32m+[0m[0m backend_address_pool_id = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m ip_configuration_name   = "ipconfig"
      [32m+[0m[0m network_interface_id    = (known after apply)
    }

[1m  # azurerm_network_security_group.nsg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_network_security_group" "nsg" {
      [32m+[0m[0m id                  = (known after apply)
      [32m+[0m[0m location            = "eastus"
      [32m+[0m[0m name                = "udacity-project-nsg"
      [32m+[0m[0m resource_group_name = "udacity-project-rg"
      [32m+[0m[0m security_rule       = [
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "AzureLoadBalancer"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "80"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "allow-web-traffic"
              [32m+[0m[0m priority                                   = 400
              [32m+[0m[0m protocol                                   = "Tcp"
              [32m+[0m[0m source_address_prefix                      = "VirtualNetwork"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "VirtualNetwork"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "*"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "allow-VMs-to-communicate-Inbound"
              [32m+[0m[0m priority                                   = 200
              [32m+[0m[0m protocol                                   = "*"
              [32m+[0m[0m source_address_prefix                      = "VirtualNetwork"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Allow"
              [32m+[0m[0m destination_address_prefix                 = "VirtualNetwork"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "*"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Outbound"
              [32m+[0m[0m name                                       = "allow-VMs-to-communicate-Outbound"
              [32m+[0m[0m priority                                   = 300
              [32m+[0m[0m protocol                                   = "*"
              [32m+[0m[0m source_address_prefix                      = "VirtualNetwork"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
          [32m+[0m[0m {
              [32m+[0m[0m access                                     = "Deny"
              [32m+[0m[0m destination_address_prefix                 = "VirtualNetwork"
              [32m+[0m[0m destination_address_prefixes               = []
              [32m+[0m[0m destination_application_security_group_ids = []
              [32m+[0m[0m destination_port_range                     = "*"
              [32m+[0m[0m destination_port_ranges                    = []
              [32m+[0m[0m direction                                  = "Inbound"
              [32m+[0m[0m name                                       = "deny-all-inbound-from-Internet-all-protocols"
              [32m+[0m[0m priority                                   = 100
              [32m+[0m[0m protocol                                   = "*"
              [32m+[0m[0m source_address_prefix                      = "Internet"
              [32m+[0m[0m source_address_prefixes                    = []
              [32m+[0m[0m source_application_security_group_ids      = []
              [32m+[0m[0m source_port_range                          = "*"
              [32m+[0m[0m source_port_ranges                         = []
                [90m# (1 unchanged attribute hidden)[0m[0m
            },
        ]
      [32m+[0m[0m tags                = {
          [32m+[0m[0m "Environment" = "Test"
        }
    }

[1m  # azurerm_public_ip.pubip[0m will be created
[0m  [32m+[0m[0m resource "azurerm_public_ip" "pubip" {
      [32m+[0m[0m allocation_method       = "Static"
      [32m+[0m[0m ddos_protection_mode    = "VirtualNetworkInherited"
      [32m+[0m[0m fqdn                    = (known after apply)
      [32m+[0m[0m id                      = (known after apply)
      [32m+[0m[0m idle_timeout_in_minutes = 4
      [32m+[0m[0m ip_address              = (known after apply)
      [32m+[0m[0m ip_version              = "IPv4"
      [32m+[0m[0m location                = "eastus"
      [32m+[0m[0m name                    = "udacity-project-pubip"
      [32m+[0m[0m resource_group_name     = "udacity-project-rg"
      [32m+[0m[0m sku                     = "Standard"
      [32m+[0m[0m sku_tier                = "Regional"
      [32m+[0m[0m tags                    = {
          [32m+[0m[0m "Environment" = "Test"
        }
    }

[1m  # azurerm_resource_group.rg[0m will be created
[0m  [32m+[0m[0m resource "azurerm_resource_group" "rg" {
      [32m+[0m[0m id       = (known after apply)
      [32m+[0m[0m location = "eastus"
      [32m+[0m[0m name     = "udacity-project-rg"
      [32m+[0m[0m tags     = {
          [32m+[0m[0m "Environment" = "Test"
        }
    }

[1m  # azurerm_subnet.snet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet" "snet" {
      [32m+[0m[0m address_prefixes                              = [
          [32m+[0m[0m "10.0.0.0/24",
        ]
      [32m+[0m[0m default_outbound_access_enabled               = true
      [32m+[0m[0m id                                            = (known after apply)
      [32m+[0m[0m name                                          = "udacity-project-snet"
      [32m+[0m[0m private_endpoint_network_policies             = "Disabled"
      [32m+[0m[0m private_link_service_network_policies_enabled = true
      [32m+[0m[0m resource_group_name                           = "udacity-project-rg"
      [32m+[0m[0m virtual_network_name                          = "udacity-project-vnet"
    }

[1m  # azurerm_subnet_network_security_group_association.internal[0m will be created
[0m  [32m+[0m[0m resource "azurerm_subnet_network_security_group_association" "internal" {
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m network_security_group_id = (known after apply)
      [32m+[0m[0m subnet_id                 = (known after apply)
    }

[1m  # azurerm_virtual_machine_data_disk_attachment.attach_disk[0][0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_machine_data_disk_attachment" "attach_disk" {
      [32m+[0m[0m caching                   = "ReadWrite"
      [32m+[0m[0m create_option             = "Attach"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m lun                       = 0
      [32m+[0m[0m managed_disk_id           = (known after apply)
      [32m+[0m[0m virtual_machine_id        = (known after apply)
      [32m+[0m[0m write_accelerator_enabled = false
    }

[1m  # azurerm_virtual_machine_data_disk_attachment.attach_disk[1][0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_machine_data_disk_attachment" "attach_disk" {
      [32m+[0m[0m caching                   = "ReadWrite"
      [32m+[0m[0m create_option             = "Attach"
      [32m+[0m[0m id                        = (known after apply)
      [32m+[0m[0m lun                       = 1
      [32m+[0m[0m managed_disk_id           = (known after apply)
      [32m+[0m[0m virtual_machine_id        = (known after apply)
      [32m+[0m[0m write_accelerator_enabled = false
    }

[1m  # azurerm_virtual_network.vnet[0m will be created
[0m  [32m+[0m[0m resource "azurerm_virtual_network" "vnet" {
      [32m+[0m[0m address_space                  = [
          [32m+[0m[0m "10.0.0.0/24",
        ]
      [32m+[0m[0m dns_servers                    = (known after apply)
      [32m+[0m[0m guid                           = (known after apply)
      [32m+[0m[0m id                             = (known after apply)
      [32m+[0m[0m location                       = "eastus"
      [32m+[0m[0m name                           = "udacity-project-vnet"
      [32m+[0m[0m private_endpoint_vnet_policies = "Disabled"
      [32m+[0m[0m resource_group_name            = "udacity-project-rg"
      [32m+[0m[0m subnet                         = (known after apply)
      [32m+[0m[0m tags                           = {
          [32m+[0m[0m "Environment" = "Test"
        }
    }

[1mPlan:[0m 19 to add, 0 to change, 0 to destroy.
[0m[90m
─────────────────────────────────────────────────────────────────────────────[0m

Saved the plan to: tfplan

To perform exactly these actions, run the following command to apply:
    terraform apply "tfplan"
